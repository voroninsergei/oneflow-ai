name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to TestPyPI instead of PyPI'
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools

      - name: Verify setup.py
        run: python setup.py check --strict --metadata

      - name: Build distribution packages
        run: python -m build

      - name: Check distribution packages
        run: twine check dist/*

      - name: List built packages
        run: ls -lh dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    permissions:
      id-token: write  # IMPORTANT: for trusted publishing
    
    environment:
      name: pypi
      url: https://pypi.org/project/oneflow-ai/

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: false
          verbose: true

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.inputs.test_pypi == 'true' || github.event_name == 'workflow_dispatch'
    
    permissions:
      id-token: write
    
    environment:
      name: testpypi
      url: https://test.pypi.org/project/oneflow-ai/

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true

  create-github-release-notes:
    name: Create GitHub Release Notes
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload '${{ github.event.release.tag_name }}' dist/* --clobber

      - name: Add installation instructions to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat >> release_notes.md << 'EOF'
          
          ## Installation
          
          Install from PyPI:
          ```bash
          pip install oneflow-ai
          ```
          
          Install from source:
          ```bash
          pip install git+https://github.com/voroninsergei/oneflow-ai.git@${{ github.event.release.tag_name }}
          ```
          
          ## Docker Image
          
          Pull from GitHub Container Registry:
          ```bash
          docker pull ghcr.io/voroninsergei/oneflow-ai:${{ github.event.release.tag_name }}
          ```
          
          ## Quick Start
          
          ```python
          from src.main import OneFlowAI
          
          # Initialize
          system = OneFlowAI(initial_balance=100)
          
          # Make a request
          result = system.process_request('gpt', 'Hello, world!')
          print(result)
          ```
          
          ## Documentation
          
          - [Quickstart Guide](https://github.com/voroninsergei/oneflow-ai/blob/main/docs/QUICKSTART.md)
          - [API Documentation](https://github.com/voroninsergei/oneflow-ai/blob/main/docs/)
          - [Developer Guide](https://github.com/voroninsergei/oneflow-ai/blob/main/docs/DEVELOPER_GUIDE.md)
          EOF
          
          gh release edit '${{ github.event.release.tag_name }}' --notes-file release_notes.md

  test-installation:
    name: Test PyPI installation
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Wait for PyPI propagation
        run: sleep 120

      - name: Install from PyPI
        run: |
          pip install oneflow-ai
          python -c "from src.main import OneFlowAI; print('Import successful')"

      - name: Test basic functionality
        run: |
          python << 'EOF'
          from src.main import OneFlowAI
          system = OneFlowAI(initial_balance=100)
          print(f"Wallet balance: {system.wallet.get_balance()}")
          print("Installation test passed!")
          EOF
