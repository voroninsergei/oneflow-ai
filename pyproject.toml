[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

# ============================================================================
# Project Metadata (PEP 621)
# ============================================================================
[project]
name = "oneflow-ai"
version = "2.0.0"
description = "AI Model Aggregator with Pricing, Routing, Analytics & Authentication"
readme = "README.md"
license = {text = "Proprietary"}
requires-python = ">=3.9"
authors = [
    {name = "Sergey Voronin", email = "voroninsergeiai@gmail.com"}
]
keywords = [
    "ai",
    "artificial-intelligence",
    "machine-learning",
    "gpt",
    "openai",
    "anthropic",
    "api-aggregator",
    "pricing",
    "routing",
    "analytics",
    "fastapi",
    "multi-region",
    "compliance",
    "gdpr",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Framework :: FastAPI",
    "Typing :: Typed",
]

# ============================================================================
# URLs
# ============================================================================
[project.urls]
Homepage = "https://github.com/voroninsergei/oneflow-ai"
Documentation = "https://github.com/voroninsergei/oneflow-ai/tree/main/docs"
Repository = "https://github.com/voroninsergei/oneflow-ai"
"Bug Tracker" = "https://github.com/voroninsergei/oneflow-ai/issues"
Changelog = "https://github.com/voroninsergei/oneflow-ai/blob/main/CHANGELOG.md"

# ============================================================================
# Dependencies
# ============================================================================
[project.dependencies]
# Core dependencies
fastapi = ">=0.104.0"
uvicorn = {extras = ["standard"], version = ">=0.24.0"}
pydantic = ">=2.0.0"

# Database
sqlalchemy = ">=2.0.0"
psycopg2-binary = ">=2.9.0"

# Authentication
PyJWT = ">=2.8.0"
passlib = {extras = ["bcrypt"], version = ">=1.7.4"}
python-multipart = ">=0.0.6"

# HTTP & Utils
httpx = ">=0.25.0"
requests = ">=2.31.0"
python-dotenv = ">=1.0.0"

# ============================================================================
# Optional Dependencies
# ============================================================================
[project.optional-dependencies]
# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

# API providers
api = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "stability-sdk>=0.8.0",
    "elevenlabs>=0.2.0",
]

# Web server enhancements
web = [
    "aiofiles>=23.2.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
]

# Database extras
db = [
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
]

# Authentication extras
auth = [
    "python-jose[cryptography]>=3.3.0",
    "cryptography>=41.0.0",
]

# Monitoring & Observability
monitoring = [
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
]

# Regional compliance
compliance = [
    "cryptography>=41.0.0",
]

# Full installation (all extras)
all = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "stability-sdk>=0.8.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "python-jose[cryptography]>=3.3.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "cryptography>=41.0.0",
]

# ============================================================================
# Console Scripts
# ============================================================================
[project.scripts]
oneflow-ai = "src.cli:main"
oneflow-server = "web_server:main"

# ============================================================================
# Setuptools Configuration
# ============================================================================
[tool.setuptools]
zip-safe = false
platforms = ["any"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.md"]

# ============================================================================
# Ruff - Modern Python Linter & Formatter
# ============================================================================
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from None
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/**/*.py" = ["ARG", "S101"]  # allow assert and unused args in tests

[tool.ruff.lint.isort]
known-first-party = ["oneflow"]

# ============================================================================
# Black - Code Formatter
# ============================================================================
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

# ============================================================================
# isort - Import Sorting
# ============================================================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# ============================================================================
# MyPy - Static Type Checker
# ============================================================================
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_concatenate = true

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "passlib.*",
    "stability_sdk.*",
    "elevenlabs.*",
]
ignore_missing_imports = true

# ============================================================================
# Pytest - Testing Framework
# ============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# ============================================================================
# Coverage
# ============================================================================
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
