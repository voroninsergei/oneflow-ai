apiVersion: apps/v1
kind: Deployment
metadata:
  name: oneflow-ai
  namespace: oneflow-ai
  labels:
    app: oneflow-ai
    version: v2.0
    component: api
spec:
  replicas: 3
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  selector:
    matchLabels:
      app: oneflow-ai
      component: api
  
  template:
    metadata:
      labels:
        app: oneflow-ai
        version: v2.0
        component: api
      annotations:
        # Prometheus metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        # Force restart on config change
        checksum/config: "{{ include (print $.Template.BasePath '/configmap.yaml') . | sha256sum }}"
        checksum/secret: "{{ include (print $.Template.BasePath '/secret.yaml') . | sha256sum }}"
    
    spec:
      serviceAccountName: oneflow-ai
      
      # Security Context для пода
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Для graceful shutdown
      terminationGracePeriodSeconds: 60
      
      # Init containers (опционально, для миграций БД)
      initContainers:
      - name: db-migrations
        image: oneflow-ai:2.0.0
        command: ['sh', '-c', 'python -m alembic upgrade head || true']
        envFrom:
        - configMapRef:
            name: oneflow-config
        - secretRef:
            name: oneflow-secrets
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      
      containers:
      - name: oneflow-ai
        image: oneflow-ai:2.0.0  # Замените на ваш registry: your-registry.com/oneflow-ai:2.0.0
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Environment Variables
        envFrom:
        - configMapRef:
            name: oneflow-config
        - secretRef:
            name: oneflow-secrets
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # Resource Limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "512Mi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        
        # Startup Probe - для медленного старта приложения
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12  # 60 секунд на старт (5s * 12)
        
        # Liveness Probe - перезапускает контейнер при сбое
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Readiness Probe - убирает под из балансировки при неготовности
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        # Security Context для контейнера
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]  # Graceful shutdown
        
        # Volume Mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /home/appuser/.cache
        - name: app-logs
          mountPath: /var/log/app
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 500Mi
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: app-logs
        emptyDir:
          sizeLimit: 500Mi
      
      # Topology Spread - распределение по нодам
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: oneflow-ai
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: oneflow-ai
      
      # Pod Anti-Affinity - не размещать поды на одной ноде
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - oneflow-ai
              topologyKey: kubernetes.io/hostname
